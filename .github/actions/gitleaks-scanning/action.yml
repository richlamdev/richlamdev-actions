name: 'Gitleaks Secret Scanning'
description: 'Scan repositories for secrets using Gitleaks'

branding:
  icon: 'shield'
  color: 'red'

inputs:
  config-path:
    description: 'Path to gitleaks config file'
    required: false
    default: '.github/actions/gitleaks-scanning/.gitleaks.toml'
  gitleaks-flags:
    description: 'Additional gitleaks flags'
    required: false
    default: ''
  scan-mode:
    description: 'Scan mode (latest-commit or full)'
    required: false
    default: 'latest-commit'

runs:
  using: 'composite'
  steps:
    - name: Check for config file
      id: config-check
      shell: bash
      run: |
        if [ -f "$CONFIG_PATH" ]; then
          echo "found=true" >> $GITHUB_OUTPUT
          echo "Using calling repository's .gitleaks.toml"
        else
          echo "found=false" >> $GITHUB_OUTPUT
          echo "No .gitleaks.toml found - using Gitleaks default"
        fi

    - name: Run gitleaks
      shell: bash
      env:
        SCAN_MODE: ${{ inputs.scan-mode }}
        SHA: ${{ github.sha }}
        FOUND: ${{ steps.config-check.outputs.found }}
        CONFIG_PATH: ${{ inputs.config-path }}
        WORKSPACE: ${{ github.workspace }}
        GITLEAKS_LICENSE_KEY: ${{ env.GITLEAKS_LICENSE_KEY }}
        GITLEAKS_FLAGS: ${{ inputs.gitleaks-flags }}
      run: |
        # Determine scan range
        if [ "$SCAN_MODE" = "latest-commit" ]; then
          LOG_OPTS="--log-opts=$SHA^..$SHA"
        else
          LOG_OPTS=""
        fi
        # Set config flag if file exists
        if [ "$FOUND" = "true" ]; then
          CONFIG_FLAG="--config=/repo/$CONFIG_PATH"
        else
          CONFIG_FLAG=""
        fi
        docker run --rm \
          -v "$WORKSPACE:/repo" \
          -e GITLEAKS_LICENSE_KEY="$GITLEAKS_LICENSE_KEY" \
          zricethezav/gitleaks:v8.18.4@sha256:75bdb2b2f4db213cde0b8295f13a88d6b333091bbfbf3012a4e083d00d31caba \
          detect \
          --source="/repo" \
          ${LOG_OPTS} \
          ${CONFIG_FLAG} \
          --verbose \
          --redact \
          --ignore-gitleaks-allow \
          --exit-code 1 \
          $GITLEAKS_FLAGS
